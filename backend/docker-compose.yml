services:
  backend:
    container_name: pu-backend
    hostname: backend
    volumes:
      - ./:/backend
    command: bash -c 'mvn spring-boot:run'
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
    cap_add:
      - SYS_PTRACE
    tty: true
    stdin_open: true
    network_mode: "host"
    depends_on:
      - db
  env:
    container_name: pu-backend
    hostname: backend
    volumes:
      - ./:/backend
    command: bash
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
    cap_add:
      - SYS_PTRACE
    tty: true
    stdin_open: true
    network_mode: "host"
    depends_on:
      - db
  db:
    container_name: pu-db
    hostname: db
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: pu_database
      MYSQL_USER: pu_user
      MYSQL_PASSWORD: pu_password
    ports:
        - "3306:3306"
    volumes:
      - ./sql_data:/var/lib/mysql
    network_mode: "host"

  populate_db:
    container_name: pu-setup-db
    hostname: setup-db
    build:
      context: scripts/populate_database
      dockerfile: Dockerfile
    network_mode: "host"

  load_db: # Starts spring boot, but mounting the database file
    container_name: pu-load-db
    hostname: load-db
    volumes:
      - ./:/backend
      - ./db:/backend/src/main/resources/
    build:
      context: .
      dockerfile: docker/Dockerfile
    cap_add:
      - SYS_PTRACE
    tty: true
    stdin_open: true
    network_mode: "host"
    depends_on:
      - db
    command: bash -c 'mvn spring-boot:run'